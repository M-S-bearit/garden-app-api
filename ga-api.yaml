openapi: 3.0.3
info:
  title: Easy Garden App _ APIs Definition
  description: |
    # About Easy Garden App
    ![Garden-App Logo](https://main.dps6886imp1cr.amplifyapp.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo-box.5c48920a.png&w=384&q=75)

    **Easy Garden** is a gardening application that allows users to manage their garden and keep track of their plants. Users can add plants to their garden, view the quantity of plants they have, and reset the garden if needed. The app utilizes Redux and React Redux to manage the state of the garden.

    # The app's main features include:
    - Retrieve all users data or single user data
    - Retrieve all plants data or single plant data
    - Filter plants by categories
    - Search for specific plant
    - AI support
    - and `much more`

    # Categories supported
      - herbs
      - vegetables
      - flowers
  termsOfService: https://garden-app-vercel.vercel.app/terms/
  contact:
    name: Garden App Team
    url: https://garden-app-vercel.vercel.app/support
    email: support@gardenapp.fi
  license:
    name: Garden-App License
    url: https://garden-app-vercel.vercel.app/LICENSE-1.0.html
  version: 0.0.1
servers:
  - url: http://localhost:3000/
    description: Development server
  - url: https://garden-app-vercel.vercel.app/
    description: Live server
tags:
  - name: Users
    description: all-users-related operations
  - name: User
    description: single-user-related operations
  - name: Plants
    description: plants-related operations
  - name: Plant
    description: single-plant-related operations
paths:
  /Users:
    get:
      tags:
        - Users
      summary: List all Users
      description: Returns the list of all registered Users
      responses:
        "200":
          description: Return a list of All Users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
              examples:
                all-Users-data:
                  summary: All users example data
                  value:
                    - userId: 64a3c0d50d0f50248c8a4242
                      name: User Name
                      email: user.email@email.com
                      image: "https://lh3.googleusercontent.com/a/AAcHTtfCw1CQHEbIB6rZ0clQ9GRjAy7QS3PZl7OCNEshx7zD=s96-c"
                      createdAt: "2023-07-04T06:48:53.424Z"
                      updatedAt: "2023-07-04T06:48:53.424Z"
        "500":
                $ref: "#/components/responses/InternalServerError"
        "400":
             $ref: "#/components/responses/BadRequestError"

    post:
      tags:
        - Users
      summary: Create a new User
      description: Creates a new user and returns user details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        "201":
          description: Return the created User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "400":
          $ref: "#/components/responses/BadRequestErrorUserPost"

  /Users/{userId}:
    get:
      tags:
        - User
      summary: Get user details by ID
      description: |
        Get user details based on ID provided in the URL.
        Example: `http://localhost:3000/api/users/64a95a8d5efe31c392445f33`
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: 64a95a8d5efe31c392445f33
      responses:
        '200':
          description: Return user details based on ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                single-user-data:
                  summary: Single user details
                  value:
                    userId: 54dsf454421swdfdsf
                    name: Mohamed Sallam
                    email: mohamed.sallam@learnit.fi
        '500':
          $ref: "#/components/responses/InternalServerError"
        '400':
          $ref: "#/components/responses/BadRequestError"

  /loggedinUser:
    get:
      tags:
        - User
      summary: Return the current logged in User for testing purposes (name & email)
      description: Return single logged in user using session provider
      responses:
        "200":
          description: Return logged in User details
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
              examples:
                single-user-data:
                  summary: Logged in user details
                  value:
                    userId: 54dsf454421swdfdsf
                    name: Mohamed Sallam
                    email: mohamed.sallam@learnit.fi

        "500":
          $ref: "#/components/responses/InternalServerError"

  /plants:
    get:
      tags:
        - Plants
      summary: List all plants available in the database
      description: |
        Returns the List of all plants available in the database

      responses:
        "200":
          description: A list all plants available in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlantData"
              examples:
                plants-data:
                  summary: Plants example data
                  value:
                    - trefle_id: 111
                      common_name: plant common name
                      scientific_name: plant scientific name
                      image_url: https://example.com/carrot.jpg
                      description: Some description
                      lighting: ["full sun", "partial shade"]
                      diseases: ["disease_001", "disease_002"]
                      type: "herb"

                      blooming_period:
                        {
                          add_information: "between late spring and early fall",
                          start: "2023-07-01",
                          end: "2023-09-30",
                        }
                      dimensions: max 30cm
                      hardiness: hardiness data
                      soil_ph_min: 7
                      soil_ph_max: 77
                      life_cycle: evergreen
                      CareAdvice:
                        watering: "deeply 2-3 times per week when top of soil becomes dry"
                        fertilizing: "fertilizing"
                        planting: "planting"
                        seasonal_care: "seasonal_care"

        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/plants/{plantId}:
    get:
      tags:
        - Plant
      summary: Return single plant details
      description: |
        Return single plant details based on ID. You can provide the id as a segment in the URL as the following example:   
        ### http://localhost:3000/api/plants`?id=64ad39f138db1dd55edcbf1c`
      parameters:
        - name: plantId
          in: path
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 102
      responses:
        "200":
          description: A list all plants available in the database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlantData"
              examples:
                plants-data:
                  summary: Single plant example data
                  value:
                    trefle_id: 111
                    common_name: plant common name
                    scientific_name: plant scientific name
                    image_url: https://example.com/carrot.jpg
                    description: Some description
                    lighting: ["full sun", "partial shade"]
                    diseases: ["disease_001", "disease_002"]
                    type: "flower"

                    blooming_period:
                      {
                        add_information: "between late spring and early fall",
                        start: "2023-07-01",
                        end: "2023-09-30",
                      }

                    dimensions: max 30cm
                    hardiness: hardiness data
                    soil_ph_min: 7
                    soil_ph_max: 77
                    life_cycle: evergreen
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/plants:
    post:
      tags:
        - Plant
      summary: Create a new rose data entry
      description: Create a new rose data entry in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/addPlant"
      responses:
        "200":
          description: OK

components:
  parameters:
    orderIdQueryParam:
      name: orderId
      in: query
      required: true
      schema:
        type: integer
  schemas:
    PlantData:
      type: object
      properties:
        id:
          type: string
        trefle_id:
          type: integer
        common_name:
          type: string
        scientific_name:
          type: string
        image_url:
          type: string
        description:
          type: string
        lighting:
          type: array
          items:
            type: string
        diseases:
          type: array
          items:
            type: string
        type:
          type: array
          items:
            type: string

        blooming_period:
          type: object
          properties:
            add_information:
              type: string
            extendedData_002:
              type: string
            extendedData_003:
              type: string

        dimensions:
          type: string
        hardiness:
          type: string
        soil_ph_min:
          type: integer
        soil_ph_max:
          type: integer
        life_cycle:
          type: string
        care_advice:
          $ref: "#/components/schemas/CareAdvice"

    addPlant:
      type: object
      properties:
        lighting:
          type: array
          items:
            type: string
        blooming_period:
          type: object
          properties:
            add_information:
              type: string
            extendedData_002:
              type: string
            extendedData_003:
              type: string
        care_advice:
          $ref: "#/components/schemas/CareAdvice"
        description:
          type: string
        diseases:
          type: array
          items:
            type: string
        common_name:
          type: string
        image_url:
          type: string
          format: uri
        type:
          type: string
        soil_ph_min:
          type: number
          format: float
        life_cycle:
          type: string
        trefle_id:
          type: integer
          format: int64
        scientific_name:
          type: string
        dimensions:
          type: string
        hardiness:
          type: string
        soil_ph_max:
          type: number
          format: float
    User:
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        email:
          type: string
        image:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    UserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    blooming_period:
      type: object
      properties:
        add_information:
          type: string
        extendedData_002:
          type: string
        extendedData_003:
          type: string

    CareAdvice:
      type: object
      properties:
        watering:
          type: string
        fertilizing:
          type: string
        planting:
          type: string
        seasonal_care:
          type: string

  responses:
    InternalServerError:
      description: |
        An error occurred while processing the request.
        Please contact support@gardenapp.com
    BadRequestError:
      description: |
        The server was unable to process the request due to invalid information sent by the client.
    BadRequestErrorUserPost:
      description: |
        The server was unable to create new user.
